library(ecodist)
correlo <- mgram(distzinc,distgeo)
plot(correlo)
abline(a=0,b=0, col="red")
coordinates(meuse) <- ~ x+y
class(meuse)
bubble(meuse,"zinc",main = "zinc (ppm)")  # ppm : parties par millions
v1 <- variogram(log(zinc)~1,meuse,cloud=T)
v2 <- variogram(log(zinc)~1,meuse)
plot(v1)
plot(v2, plot.numbers=T)
plot(v1, identify=T)
vgm1 <- vgm(0.6, "Sph", 1000, 0.05)
vgm1
plot(v1,model=vgm1)
plot(v2,model=vgm1)
vgmfit1 <- fit.variogram(v2,vgm1)
vgmfit1
plot(v2,model=vgmfit1)
vgmfit2 <- fit.variogram(v2,vgm(0.6, "Gau", 1000, 0.05))
vgmfit2
plot(v2,model=vgmfit2)
vgmfit3 <- fit.variogram(v2,vgm(0.6, "Exp", 1000, 0.05))
plot(v2,model=vgmfit3)
attr(vgmfit1,"SSErr")
attr(vgmfit2,"SSErr")
attr(vgmfit3,"SSErr")
data(meuse.grid)
plot(meuse.grid[,1:2]) # colonnes 1 a 2 : x et y
coordinates(meuse.grid) <- ~x+y
kr <- krige(log(zinc)~1,meuse,newdata=meuse.grid,model=vgmfit1)
kr
plot(kr)
library(lattice)
levelplot(var1.pred~x+y,as.data.frame(kr),aspect = "iso",main="predictions")
levelplot(var1.var~x+y,as.data.frame(kr),aspect = "iso",main="errors")
bubble(meuse,"zinc",main = "zinc (ppm)")
x=kridge.cv(log(zinc)~1,meuse,vgmfit1,nfold=5)
x=krige.cv(log(zinc)~1,meuse,vgmfit1,nfold=5)
plot(x$var1.pred,x$observed)
cor(x$var1.pred, x$observed)^2 # au carre pour que ce soit positif
bubble(x,"residual",main="log(zinc):5-fold CV residuals")
rm(list = ls())
library(wavelets)
temp <- t(read.table("E:/ATE/Temperature.txt"))
diam <- t(read.table("E:/ATE/Diametre_algue.txt"))
par(mfrow=c(1,2))
plot(1:length(temp),temp, type="l")
plot(1:length(diam),diam, type="l")
temp <- t(read.table("Users/adrianbach/Desktop/ATE/Temperature.txt"))
temp <- t(read.table("/Users/adrianbach/Desktop/ATE/Temperature.txt"))
temp <- t(read.table("/Users/adrianbach/Desktop/M2_MSE/ATE/Temperature.txt"))
diam <- t(read.table("/Users/adrianbach/Desktop/M2_MSE/ATE/Diametre_algue.txt"))
install.packages("wavelets")
d <- t(read.table("/Users/adrianbach/Desktop/M2_MSE/ATE/Donnees peche.txt"))
d
View(d)
debit <- d[1,.]
debit <- d[1,]
larve <- d[2,]
par(mfrow=c(1,2))
par(mfrow=c(2,1))
plot(debit)
plot(1:length(debit),debit, type="l")
X11();plot(1:length(debit),debit, type="l")
X11();plot(1:length(debit),debit, type="l")
X11();plot(1:length(debit),debit, type="l")
X11();plot(1:length(debit),debit, type="l")
X11();plot(1:length(debit),debit, type="l")
X11();plot(1:length(larve),larve, type="l")
rm(list = ls())
library(wavelets)
d <- t(read.table("/Users/adrianbach/Desktop/M2_MSE/ATE/Donnees peche.txt"))
debit <- d[1,]
larve <- d[2,]
install.packages("WaveletComp")
remove.packages("wavelets")
rm(list = ls())
library(wavelets)
d <- read.table("/Users/adrianbach/Desktop/M2_MSE/ATE/Donnees peche.txt")
debit <- d[,1]
larve <- d[,2]
X11();plot(1:length(debit),debit, type="l")
my.wt = analyze.wavelet(debit, "debit",
loess.span=0,
dt=1, dj=1/250,
lowerPeriod=16,upperPeriod = 128,
make.pval=T, n.sim=10)
library("WaveletComp", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(WaveletComp)
my.wt = analyze.wavelet(debit, "debit",
loess.span=0,
dt=1, dj=1/250,
lowerPeriod=16,upperPeriod = 128,
make.pval=T, n.sim=10)
my.wt = analyze.wavelet(debit,
loess.span=0,
dt=1, dj=1/250,
lowerPeriod=16,upperPeriod = 128,
make.pval=T, n.sim=10)
d <- read.table("/Users/adrianbach/Desktop/M2_MSE/ATE/Donnees peche.txt", col.names = T)
rm(list = ls())
library(WaveletComp)
d <- read.table("/Users/adrianbach/Desktop/M2_MSE/ATE/Donnees peche.txt", col.names = T)
d <- read.table("/Users/adrianbach/Desktop/M2_MSE/ATE/Donnees peche.txt")
debit <- d[,1]
debit
larve <- d[,2]
my.wt = analyze.wavelet(debit,
loess.span=0,
dt=1, dj=1/250,
lowerPeriod=16,upperPeriod = 128,
make.pval=T, n.sim=10)
my.wt = analyze.wavelet(t(debit),
loess.span=0,
dt=1, dj=1/250,
lowerPeriod=16,upperPeriod = 128,
make.pval=T, n.sim=10)
class(debit)
debit <- as.data.frame(d[,1])
larve <- as.data.frame(d[,2])
my.wt = analyze.wavelet(debit,
loess.span=0,
dt=1, dj=1/250,
lowerPeriod=16,upperPeriod = 128,
make.pval=T, n.sim=10)
wc.image(my.wt, timelab="time (days)", periodlab="period (days)",
main="cross-wavelet power",
legend.params=list(lab="cross-wavelet power levels (quantiles)"))
wt.image(my.wt,
legend.params=list(lab="wavelet power levels (quantiles)", lab.line=3.5,
label.digits=2))
X11();wt.image(my.wt,
legend.params=list(lab="wavelet power levels (quantiles)", lab.line=3.5,
label.digits=2))
larve.wt = analyze.wavelet(larve,
loess.span=0,
dt=1, dj=1/250,
lowerPeriod=16,upperPeriod = 128,
make.pval=T, n.sim=10)
X11();wt.image(larve.wt,
legend.params=list(lab="wavelet power levels (quantiles)", lab.line=3.5,
label.digits=2))
rm(list = ls())
library(ade4)
data(jv73)
d <- jv73
boxplot(d$morpho)
d <- dist(scale(jv73$morpho))
den1 <- hclust(d, method = "ward")
den2 <- hclust(d, method = "complete")
den3 <- hclust(d, method = "average")
den4 <- hclust(d, method = "single")
plot(den1)
plot(den2)
d1 <- cophenetic(den1)
d2 <- cophenetic(den2)
d3 <- cophenetic(den3)
d4 <- cophenetic(den4)
cor(d1, d)
cor(d2, d)
cor(d3, d)
cor(d4, d)
plot(den3)
cutree(den3, 3)
s.label(jv73$xy, contour = jv73$contour, incl=F)
G<-cutree(den3, 3)
points(jv73$xy, col=G, pch=18,cex=3)
library(MASS)
data("crabs")
attach(crabs)
names()
names(crabs)
group <- sp:sex
group
(afd1 <- lda(group~FL+RW+CL+CW+BD))
afd2 <- lda(group~FL+RW+CL+CW+BD, CV=T)
names(afd2)
table(group, afd2$class)
length(group)
10/length(group)*100
(1-10/length(group))*100
afd3 <- discrimin(dudi.pca(crabs[,4:8]), group)
names(afd3)
s.arrow(afd3$fa)
s.class(afd3$li, group)
rand <- rtest(afd3,10000) # 10000 permutations
rand
plot(rand)
qda1 <- qda(group~FL+RW+CL+CW+BD, CV=T)
names(qda1)
table(group, qda1$class)
library(vegan)
mod<-betadisper(d,G)
anova(mod)
TukeyHSD(mod)
G
plot(mod)
boxplot(mod)
plot(TukeyHSD(mod))
rm(list = ls())
getwd()
etud <- read.table("/Desktop/M2_MSE/DeCAPE/logement.txt")
etud <- read.table("/Users/adrianbach/Desktop/M2_MSE/DeCAPE/logement.txt")
etud <- read.table("/Users/adrianbach/Desktop/M2_MSE/DeCAPE/logement.txt", h=T)
tab <- table(etud$Mode,etud$Type)
tab
res <- chisq.test(tab)
res
res$expected
library(ade4)
library(ade4)
tab <- as.data.frame.matrix(tab)
afc1 <- dudi.coa(tab)
barplot(afc1$eig)
sum(afc1$eig[1:2])/sum(afc1$eig)
scatter(afc1)
score(afc1)
data("atlas")
afc2<-dudi.coa(atlas$birds)
sum(afc1$eig[1:6])/sum(afc1$eig)
sum(afc1$eig[1:2])/sum(afc1$eig)
sum(afc2$eig[1:6])/sum(afc2$eig)
afc2<-dudi.coa(atlas$birds)
sum(afc2$eig[1:6])/sum(afc2$eig)
sum(afc2$eig[1:4])/sum(afc2$eig)
sum(afc2$eig[1]/sum(afc2$eig)
)
View(tab)
score(afc2)
area.plot(atlas$area, afc2$li[,1], sub = "Axe1", csub = 2)
area.plot(atlas$area, ,afc2$li[,1], sub = "Axe1", csub = 2)
dudi.acm()
dudi.acm
acm1<-dudi.acm(etud)
scatter(acm1)
acm1$cr
boxplot(acm1)
library(vegan)
cca1<-cca(atlas$birds,atlas$meteo)
plot(cca1)
anova(cca1)
envfit(cca1,atlas$meteo,permutations = 1000)
cca2 <- cca(atlas$birds ~ mini.jan+mini.jul+rain.jan, data = atlas$meteo)
anova(cca2, by="term", step=1000)
anova(cca(atlas$birds~rain.tot+Condition(mini.jan+maxi.jul), data = atlas$meteo), step=40)
rm(list = ls())
library(ade4)
library(ape)
library(vegan)
data("doubs")
env = doubs$env
fish = doubs$fish
pca1 = dudi.pca(env)
sum(pca1$eig[1:2,])/sum(pca1$eig)
pca1$eig[1:2,])/sum(pca1$eig)
pca1$eig[1:2,]/sum(pca1$eig)
sum(pca1$eig[1:2])/sum(pca1$eig)
sum(pca1$eig[1:3])/sum(pca1$eig)
pca1 = dudi.pca(env)
sum(pca1$eig[1:3])/sum(pca1$eig)
pca2 = dudi.pca(fish, scale = F)
sum(pca2$eig[1:3])/sum(pca2$eig)
View(fish)
par(mfrow=c(1,2))
scatter(pca1)
scatter(pca2)
par(mfrow=c(1,1))
scatter(pca1)
X11();scatter(pca1)
X11();scatter(pca2)
coiner1 = coinertia(pca1,pca2)
par(mfrow=c(1,2))
s.arrow(coiner1$c1)
s.arrow(coiner1$l1)
par(mfrow=c(1,1))
s.match(coiner1$mX,coiner1$mY)
testRV=RV.rtest(pca1$tab,pca2$tab,1000)
testRV
plot(testRV)
rm(list = ls())
data(atlas)
tab01=ifelse(atlas$birds>0,1,0)
D = dist(tab01, method = "binary")
atlas$birds
pcoa1=pcoa(D)
pcoa1
vp_pos = pcoa1$values$Eigenvalues[which(pcoa1$values$Eigenvalues>=0)]
vp_pos/(sum(vp_pos))*100
biplot(pcoa1)
biplot(pcoa1,tab01)
rm(list = ls())
data("varespec")
data("varechem")
nmds=metaMDS(varespec)
names(nmds)
nmds$stress
stressplot(nmds)
plot(nmds)
plot(nmds,type="n")
points(nmds, display = c("sites"),
pch=21,col="red", bg="yellow",cex=1.5)
text(nmds, display = "species",
col="blue")
fit<-envfit(nmds, varechem,perm=999)
fit
plot(nmds)
plot(fit)
plot(fit,p.max=0.05, col="red")
library(ade4)
data(iris)
boxplot(iris[,1:4])
pairs(iris[,1:4])
?dudi.pca
acp1 = dudi.pca(iris[,1:4])
names(acp1)
acp1$eig
barplot(acp1$eig)
sum(acp1$eig)
for (i in 1:4){
res=acp1$eig[i]/sum(acp1$eig)
print(res)
}
acp1$co
s.corcircle(acp1$co)
s.corcircle(acp1$co[,c(1,3)])
acp1$li[,c(1,2)]
plot(acp1$li[,c(1,2)], pch = 21, bg = iris$Species)
abline(h=0, v=0)
scatter(acp1)
s.class(acp1$li, iris$Species, col=c("black", "red", "green"))
library(readxl)
X_A_UTILISER_sans_feuille_3_mais_avec_détail_pour_conjoint_Copie_de_Secours_populaire_statistiques_JANV_à_MI_NOV_2017 <- read_excel("~/Desktop/*** A UTILISER !! sans feuille 3 mais avec détail \"pour conjoint\" Copie de Secours populaire-statistiques JANV à MI NOV 2017.xlsx")
View(X_A_UTILISER_sans_feuille_3_mais_avec_détail_pour_conjoint_Copie_de_Secours_populaire_statistiques_JANV_à_MI_NOV_2017)
SPF <- X_A_UTILISER_sans_feuille_3_mais_avec_détail_pour_conjoint_Copie_de_Secours_populaire_statistiques_JANV_à_MI_NOV_2017
rm(X_A_UTILISER_sans_feuille_3_mais_avec_détail_pour_conjoint_Copie_de_Secours_populaire_statistiques_JANV_à_MI_NOV_2017)
tab1 <- is.na!(SPF)
tab1 <- !is.na(SPF)
View(tab1)
tab1 <- SPF[-is.na(SPF),-is.na(SPF)]
tab1 <- SPF[1:1478,]
tab1 <- tab1[,c(7,28,56)]
tab1 <- tab1[-1,]
summary(tab1)
which(is.na(tab1$`Sans ressources (si oui: 1 sinon: 0)`))
tab1 <- tab1[-which(is.na(tab1$`Sans ressources (si oui: 1 sinon: 0)`)),]
tab1[,1]
tab[1,1] == 1
tab1[1,1] == 1
tab1[2,1] == 1
for (i in 1:nrow(tab1)){
ifelse(tab1[i,1] == 1, tab1[i,1] <- "celib", tab1[i,1] <- "couple")
}
View(SPF)
nrow(tab1)
for (i in 1:nrow(tab1)){
ifelse(tab1[i,2] == 1, tab1[i,2] <- "SR", tab1[i,2] <- "AR")
}
View(SPF)
for (i in 1:nrow(tab1)){
ifelse(tab1[i,3] == 1, tab1[i,3] <- "Loc", tab1[i,3] <- "PasLoc")
}
library(ade4)
tab1 <- as.data.frame(tab1)
acf1 <- dudi.coa(tab1)
tab1[,1] <- as.factor(tab1[,1])
tab1[,2] <- as.factor(tab1[,2])
tab1[,3] <- as.factor(tab1[,3])
tab1 <- as.data.frame(tab1)
acf1 <- dudi.coa(tab1)
names(acf1)
tab1[,1] <- as.numeric(tab1[,1])
tab1[,1] <- as.numeric(tab1[,1])
tab1[,2] <- as.numeric(tab1[,2])
tab1[,3] <- as.numeric(tab1[,3])
tab1 <- as.data.frame(tab1)
acf1 <- dudi.coa(tab1)
barplot(acf1$eig)
scatter(acf1)
acm1 <- dudi.acm(tab1)
tab1[,1] <- as.factor(tab1[,1])
tab1[,2] <- as.factor(tab1[,2])
tab1[,3] <- as.factor(tab1[,3])
tab1 <- as.data.frame(tab1)
acm1 <- dudi.acm(tab1)
scatter(acm1)
tab1 <- SPF[-is.na(SPF),-is.na(SPF)]
tab1 <- SPF[1:1478,]
tab1 <- tab1[,c(7,28,56)]
tab1 <- tab1[-1,]
summary(tab1)
tab1 <- tab1[-which(is.na(tab1$`Sans ressources (si oui: 1 sinon: 0)`)),]
for (i in 1:nrow(tab1)){
ifelse(tab1[i,1] == 1, tab1[i,1] <- "celib", tab1[i,1] <- "couple")
}
tab1[,1] <- as.factor(tab1[,1])
tab1 <- SPF[-is.na(SPF),-is.na(SPF)]
tab1 <- SPF[1:1478,]
tab1 <- tab1[,c(7,28,56)]
tab1 <- tab1[-1,]
tab1 <- tab1[-which(is.na(tab1$`Sans ressources (si oui: 1 sinon: 0)`)),]
for (i in 1:nrow(tab1)){
ifelse(tab1[i,1] == 1, tab1[i,1] <- "celib", tab1[i,1] <- "couple")
}
for (i in 1:nrow(tab1)){
ifelse(tab1[i,2] == 1, tab1[i,2] <- "SR", tab1[i,2] <- "AR")
}
for (i in 1:nrow(tab1)){
ifelse(tab1[i,3] == 1, tab1[i,3] <- "Loc", tab1[i,3] <- "PasLoc")
}
tab1 <- as.data.frame(tab1)
acm1 <- dudi.acm(tab1)
tab1[,1] <- as.factor(tab1[,1])
tab1[,2] <- as.factor(tab1[,2])
tab1[,3] <- as.factor(tab1[,3])
tab1 <- as.data.frame(tab1)
acm1 <- dudi.acm(tab1)
scatter(acm1)
boxplot(acm1)
acm1$eig
acm1$cr
chisq.test(tab1)
chisq.test(tab1$`Personne seul   (si oui: 1  sinon: 0)`,tab1$`Sans ressources (si oui: 1 sinon: 0)`)
chisq.test(tab1$`Personne seul   (si oui: 1  sinon: 0)`,tab1$`Locataire (si oui: 1  sinon: 0)`)
chisq.test(tab1$`Locataire (si oui: 1  sinon: 0)`,tab1$`Sans ressources (si oui: 1 sinon: 0)`)
install.packages("~/Downloads/GMSE_0.4.0.7.tar.gz", repos = NULL, type = "source")
library("GMSE", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
#### init ####
rm(list=ls())
# wd
setwd("Desktop/Thèse/GitKraken/tests_gmse/")
getwd()
sim1 <- gmse_apply()
sim1
head(sim1)
# from help
sim <- gmse(lambda = 0.3, land_ownership = TRUE, time_max = 10, plotting = TRUE)
# desactiver le plot
sim_budget2 <- gmse(land_ownership = TRUE, stakeholders = 2, observe_type = 0,
res_death_K = 2000, manage_target = 1000, RESOURCE_ini = 1000,
user_budget = 1000, manager_budget = 2000, res_consume = 1,
scaring = TRUE, plotting = F, time_max = 10)
# avec gmse_table
budget_table <- gmse_table(gmse_sim = sim_budget2)
budget_table
## manager n'agit jamais
(gmse_rep_jaja <- gmse_replicates(replicates = 10, time_max = 10, plotting = F, stakeholders = 2, manage_freq = 11))
## effet d'un ecart de budget
# mm budget
gmse_rep_same <- gmse_replicates(replicates = 10, time_max = 10, plotting = F, stakeholders = 2)
gmse_rep_same
# nb de replicats
nbrep <- 5
target <- 1000
budget <- 1000
# nb de mesures a relever: deux calculs + pop
nbmesures <- 3
# meme budget
facteur <- 1
# init table
res_f1 <- matrix(nrow = nbrep, ncol = nbmesures*3, dimnames = list(c(1:nbrep),c("pop_mean","pop_sd","pop_95ci","dev_mean","dev_sd","dev_95ci","yield_mean","yield_sd","yield_95ci")))
# loop
for (i in 1:nbrep) {
sim <- gmse(time_max = 10, stakeholders = 2, land_ownership = T, manage_target = target, user_budget = budget, manager_budget = facteur*budget)
table <- gmse_table(sim)
ts <- sqrt(max(table[,1]))
# mean pop
res_f1[i,1] <- mean(table[,2])
res_f1[i,2] <- sd(table[,2])
res_f1[i,3] <- 1.86*res_f1[i,2]/sqrt(ts)
res_f1[i,7] <- mean(table[,8])
res_f1[i,8] <- sd(table[,8])
res_f1[i,9] <- 1.86*res_f1[i,8]/sqrt(ts)
# deviation from target
dev <- abs(table[,2]-target)
res_f1[i,4] <- mean(dev)
res_f1[i,5] <- sd(dev)
res_f1[i,6] <- 1.86*res_f1[i,5]/sqrt(ts)
}
res_f1
# avec un plus grand budget pour les
facteur <- 2
# init table
res_f2 <- matrix(nrow = nbrep, ncol = nbmesures*3, dimnames = list(c(1:nbrep),c("pop_mean","pop_sd","pop_95ci","dev_mean","dev_sd","dev_95ci","yield_mean","yield_sd","yield_95ci")))
# loop
for (i in 1:nbrep) {
sim <- gmse(time_max = 10, stakeholders = 2, land_ownership = T, manage_target = target, user_budget = budget, manager_budget = facteur*budget)
table <- gmse_table(sim)
ts <- sqrt(max(table[,1]))
# mean pop
res_f2[i,1] <- mean(table[,2])
res_f2[i,2] <- sd(table[,2])
res_f2[i,3] <- 1.86*res_f2[i,2]/sqrt(ts)
res_f2[i,7] <- mean(table[,8])
res_f2[i,8] <- sd(table[,8])
res_f2[i,9] <- 1.86*res_f2[i,8]/sqrt(ts)
# deviation from target
dev <- abs(table[,2]-target)
res_f2[i,4] <- mean(dev)
res_f2[i,5] <- sd(dev)
res_f2[i,6] <- 1.86*res_f2[i,5]/sqrt(ts)
}
# premier plot des resultats
boxplot(res_f1[,1],res_f2[,1])
boxplot(res_f1[,1+3],res_f2[,1+3])
boxplot(res_f1[,1+6],res_f2[,1+6])
# premier plot des resultats
par(mfrow=c(1,1))
boxplot(res_f1[,1],res_f2[,1])
boxplot(res_f1[,1+3],res_f2[,1+3])
boxplot(res_f1[,1+6],res_f2[,1+6])
res_f2
